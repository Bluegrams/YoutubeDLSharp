// <auto-generated>
// This code was partially generated by a tool.
// </auto-generated>

using System;

namespace YoutubeDLSharp.Options
{
    public partial class OptionSet
    {
        private Option<int?> extractorRetries = new Option<int?>("--extractor-retries");
        private Option<bool> allowDynamicMpd = new Option<bool>("--allow-dynamic-mpd");
        private Option<bool> ignoreDynamicMpd = new Option<bool>("--ignore-dynamic-mpd");
        private Option<bool> hlsSplitDiscontinuity = new Option<bool>("--hls-split-discontinuity");
        private Option<bool> noHlsSplitDiscontinuity = new Option<bool>("--no-hls-split-discontinuity");
        private MultiOption<string> extractorArgs = new MultiOption<string>("--extractor-args");

        /// <summary>
        /// Number of retries for known extractor errors
        /// (default is 3), or &quot;infinite&quot;
        /// </summary>
        public int? ExtractorRetries { get => extractorRetries.Value; set => extractorRetries.Value = value; }
        /// <summary>
        /// Process dynamic DASH manifests (default)
        /// (Alias: --no-ignore-dynamic-mpd)
        /// </summary>
        public bool AllowDynamicMpd { get => allowDynamicMpd.Value; set => allowDynamicMpd.Value = value; }
        /// <summary>
        /// Do not process dynamic DASH manifests
        /// (Alias: --no-allow-dynamic-mpd)
        /// </summary>
        public bool IgnoreDynamicMpd { get => ignoreDynamicMpd.Value; set => ignoreDynamicMpd.Value = value; }
        /// <summary>
        /// Split HLS playlists to different formats at
        /// discontinuities such as ad breaks
        /// </summary>
        public bool HlsSplitDiscontinuity { get => hlsSplitDiscontinuity.Value; set => hlsSplitDiscontinuity.Value = value; }
        /// <summary>
        /// Do not split HLS playlists to different
        /// formats at discontinuities such as ad breaks
        /// (default)
        /// </summary>
        public bool NoHlsSplitDiscontinuity { get => noHlsSplitDiscontinuity.Value; set => noHlsSplitDiscontinuity.Value = value; }
        /// <summary>
        /// Pass ARGS arguments to the IE_KEY extractor.
        /// See &quot;EXTRACTOR ARGUMENTS&quot; for details. You
        /// can use this option multiple times to give
        /// arguments for different extractors
        /// </summary>
        public MultiValue<string> ExtractorArgs { get => extractorArgs.Value; set => extractorArgs.Value = value; }
    }
}
