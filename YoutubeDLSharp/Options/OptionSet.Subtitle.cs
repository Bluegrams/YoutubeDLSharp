// <auto-generated>
// This code was partially generated by a tool.
// </auto-generated>

using System;

namespace YoutubeDLSharp.Options
{
    public partial class OptionSet
    {
        private Option<bool> writeSubs = new Option<bool>("--write-subs");
        private Option<bool> noWriteSubs = new Option<bool>("--no-write-subs");
        private Option<bool> writeAutoSubs = new Option<bool>("--write-auto-subs");
        private Option<bool> noWriteAutoSubs = new Option<bool>("--no-write-auto-subs");
        private Option<bool> listSubs = new Option<bool>("--list-subs");
        private Option<string> subFormat = new Option<string>("--sub-format");
        private Option<string> subLangs = new Option<string>("--sub-langs");

        /// <summary>
        /// Write subtitle file
        /// </summary>
        public bool WriteSubs { get => writeSubs.Value; set => writeSubs.Value = value; }
        /// <summary>
        /// Do not write subtitle file (default)
        /// </summary>
        public bool NoWriteSubs { get => noWriteSubs.Value; set => noWriteSubs.Value = value; }
        /// <summary>
        /// Write automatically generated subtitle file
        /// (Alias: --write-automatic-subs)
        /// </summary>
        public bool WriteAutoSubs { get => writeAutoSubs.Value; set => writeAutoSubs.Value = value; }
        /// <summary>
        /// Do not write auto-generated subtitles
        /// (default) (Alias: --no-write-automatic-subs)
        /// </summary>
        public bool NoWriteAutoSubs { get => noWriteAutoSubs.Value; set => noWriteAutoSubs.Value = value; }
        /// <summary>
        /// List available subtitles of each video.
        /// Simulate unless --no-simulate is used
        /// </summary>
        public bool ListSubs { get => listSubs.Value; set => listSubs.Value = value; }
        /// <summary>
        /// Subtitle format; accepts formats preference,
        /// e.g. &quot;srt&quot; or &quot;ass/srt/best&quot;
        /// </summary>
        public string SubFormat { get => subFormat.Value; set => subFormat.Value = value; }
        /// <summary>
        /// Languages of the subtitles to download (can
        /// be regex) or &quot;all&quot; separated by commas, e.g.
        /// --sub-langs &quot;en.*,ja&quot;. You can prefix the
        /// language code with a &quot;-&quot; to exclude it from
        /// the requested languages, e.g. --sub-langs
        /// all,-live_chat. Use --list-subs for a list
        /// of available language tags
        /// </summary>
        public string SubLangs { get => subLangs.Value; set => subLangs.Value = value; }
    }
}
